class Solution:
    def isInterleave(self, s1: str, s2: str, s3: str) -> bool:
        if len(s3) != len(s1) + len(s2):
            return False
        
        dp = [[False] * (len(s2) + 1)] * (len(s1) + 1)

        # When cal dp[i][j], refer to dp[i - 1][j] or dp[i][j - 1] if ture, then compare this element

        for i in range(len(s1) + 1):
            for j in range(len(s2) + 1):
                if i == 0 and j == 0:
                    dp[0][0] = True
                elif i == 0:
                    dp[0][j] = dp[0][j - 1] and s2[j - 1] == s3[j - 1]
                elif j == 0:
                    dp[i][0] = dp[i - 1][0] and s1[i - 1] == s3[i - 1]
                else:
                    dp[i][j] = (dp[i - 1][j] and s1[i - 1] == s3[i + j -1]) or (dp[i][j - 1] and s2[j - 1] == s3[i + j -1])
        
        return dp[len(s1)][len(s2)]
