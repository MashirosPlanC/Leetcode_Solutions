class Solution:
    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:
        result=[]
        def backtrack(start,path,target):
            if target==0:
                result.append(path)
                return result
            for i in range(start,len(candidates)):
                if candidates[i]>target:
                    continue
                backtrack(i,path+[candidates[i]],target-candidates[i])
        backtrack(0,[],target)
        return result
